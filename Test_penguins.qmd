---
title: "Análisis estadísticos"
format: html
editor: visual
---


```{r}
#| code-fold: true
#| label: load-packages
#| warning: false
#| message: false


library(tidyverse)
library(palmerpenguins)
library(ggthemes)
library(RColorBrewer)
library(plotly)
library(pheatmap)
library(corrplot)
library(plotrix)
library(tastypie)

library(gplots)
library(ggmosaic)
library(treemapify)
library(ggridges)
library(ggalluvial)
library(scatterPlotMatrix)

library(readxl)
library(writexl)

```





# Importar datos e identificar variables

```{r}
#| code-fold: true

data("penguins")
datos <- penguins
head(datos)
glimpse(datos)
```


## Filtro observaciones completas


```{r}
datos <- datos[complete.cases(datos), ]

glimpse(datos)
```



# Resúmenes estadísticos `body_mass_g`

## Factor: species

```{r}
#| code-fold: true


sum_species_body_mass <- datos |> dplyr::group_by(species) |> dplyr::summarise(Conteo=n(), Media=mean(body_mass_g), DS=sd(body_mass_g))

sum_species_body_mass

```




## Factor: sex


```{r}
#| code-fold: true


sum_sex_body_mass <- datos |> dplyr::group_by(sex) |> dplyr::summarise(Conteo=n(), Media=mean(body_mass_g), DS=sd(body_mass_g))

sum_sex_body_mass

```


# Comparación t-test Adelie-Gentoo


## Filtro

```{r}
#| code-fold: true

datos_Adelie_Gentoo <- datos |> filter(species %in% c("Adelie", "Gentoo"))

levels(datos_Adelie_Gentoo$species)

datos_Adelie_Gentoo$species <- factor(datos_Adelie_Gentoo$species)

levels(datos_Adelie_Gentoo$species)
```

## Boxplot


```{r}
#| code-fold: true

ggplot(datos_Adelie_Gentoo)+
    geom_boxplot(aes(x=species, y=body_mass_g, color = species), show.legend = FALSE)+
    stat_summary(aes(x=species, y=body_mass_g),fun=mean, geom="point", shape=20, size=5, color="red", fill="red") +
    theme_bw()
```

## Cálculos preliminares

```{r}
#| code-fold: true

datos_Adelie <- datos_Adelie_Gentoo |> filter(species=="Adelie") 
x1 <- mean(datos_Adelie$body_mass_g)
s1 <- sd(datos_Adelie$body_mass_g)
n1 <- nrow(datos_Adelie)
x1
s1
n1

datos_Gentoo <- datos_Adelie_Gentoo |> filter(species=="Gentoo") 
x2 <- mean(datos_Gentoo$body_mass_g)
s2 <- sd(datos_Gentoo$body_mass_g)
n2 <- nrow(datos_Gentoo)
x2
s2
n2



```

## Cálculo de diferencia de las medias, error estándar de la diferencia, grados de libertad y t crítico 

```{r}
#| code-fold: true


x12 <- x1-x2
x12
se12 <- sqrt(s1^2/n1+s2^2/n2)
se12
df12 <- se12^4/((s1^2/n1)^2/(n1-1)+(s2^2/n2)^2/(n2-1))
df12
t_crit <- qt(0.025, df12, lower.tail = FALSE)
t_crit

```

## Extremos del intervalo de confianza (nivel 0.95)

```{r}
#| code-fold: true


low_value <- x12-t_crit*se12
low_value

upper_value <- x12+t_crit*se12
upper_value

```

## Estadística t y p value


```{r}
#| code-fold: true


t_est <- x12/se12
t_est

p_value <- 2* pt(abs(t_est), df12, lower.tail = FALSE) 
p_value

```


## Usando la función t.test


```{r}
#| code-fold: true


t.test(body_mass_g ~ species, data=datos_Adelie_Gentoo, alternative="two.sided")

```





# Correlation test



```{r}
#| code-fold: true

data_num <- dplyr::select(datos, where(is.numeric), -year)

cor_mat <- cor(data_num)
cor_mat

corrplot(cor_mat, method = "color", order = "AOE")
```


```{r}
#| code-fold: true

test_corr <- cor.mtest(data_num, conf.level=0.95)
test_corr

```

```{r}
#| code-fold: true

corrplot(cor_mat, p.mat= test_corr$p, method = "color")

```
